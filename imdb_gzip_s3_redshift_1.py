# -*- coding: utf-8 -*-
"""IMDB_gzip_S3_Redshift_v2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zUCSTuqPjOzblPrBzlr3EP4Qs5fT-m1-
"""

pip install boto3

pip install wget

pip install  psycopg2

import psycopg2
import os
import boto3
import pathlib
import wget

#download the file to local
print('Start the file download')

url1 = 'https://datasets.imdbws.com/title.principals.tsv.gz'
url2 = 'https://datasets.imdbws.com/name.basics.tsv.gz'
url3 = 'https://datasets.imdbws.com/title.akas.tsv.gz'
url4 = 'https://datasets.imdbws.com/title.crew.tsv.gz'
url5 = 'https://datasets.imdbws.com/title.episode.tsv.gz'
url6 = 'https://datasets.imdbws.com/title.ratings.tsv.gz'
url7 = 'https://datasets.imdbws.com/title.basics.tsv.gz'
wget.download(url1)
wget.download(url2)
wget.download(url3)
wget.download(url4)
wget.download(url5)
wget.download(url6)
wget.download(url7)

print('Download Complete')

#upload to S3
# Creating the low level functional client
client = boto3.client(
    's3',
    aws_access_key_id = '',
    aws_secret_access_key = '',
    region_name = 'eu-west-1'
)
    
    

#push to bucket

AWS_REGION = "eu-west-1"
S3_BUCKET_NAME = "historyredshiftucc"

file_name1='title.principals.tsv.gz'
file_name2='name.basics.tsv.gz'
file_name3='title.akas.tsv.gz'
file_name4='title.crew.tsv.gz'
file_name5='title.episode.tsv.gz'
file_name6='title.ratings.tsv.gz'
file_name7='title.basics.tsv.gz'

def upload_files(file_name, bucket, object_name=None, args=None):
    if object_name is None:
        object_name = file_name

    client.upload_file(file_name, bucket, object_name, ExtraArgs=args)
    print(f"'{file_name}' has been uploaded to '{S3_BUCKET_NAME}'")

upload_files(file_name1, S3_BUCKET_NAME)
upload_files(file_name2, S3_BUCKET_NAME)
upload_files(file_name3, S3_BUCKET_NAME)
upload_files(file_name4, S3_BUCKET_NAME)
upload_files(file_name5, S3_BUCKET_NAME)
upload_files(file_name6, S3_BUCKET_NAME)
upload_files(file_name7, S3_BUCKET_NAME)

#connection string
credential = {
'dbname' : 'dev',
'port' : '5439',
'user' : 'awsuser',
'password' : '',
'host_url':''
}

REDSHIFT_ROLE = {

'dev':''
}

conn_string = "dbname='{}' port='{}' user='{}' password='{}' host='{}'"\
.format(credential['dbname'],credential['port'],credential['user'],credential['password'],credential['host_url'])
print(conn_string)
con = psycopg2.connect(conn_string)
cur = con.cursor()
print(con)

#load s3 to redshift
print(S3_BUCKET_NAME)
s3_file1='s3://'+S3_BUCKET_NAME+'/'+file_name1
s3_file2='s3://'+S3_BUCKET_NAME+'/'+file_name2
s3_file3='s3://'+S3_BUCKET_NAME+'/'+file_name3
s3_file4='s3://'+S3_BUCKET_NAME+'/'+file_name4
s3_file5='s3://'+S3_BUCKET_NAME+'/'+file_name5
s3_file6='s3://'+S3_BUCKET_NAME+'/'+file_name6
s3_file7='s3://'+S3_BUCKET_NAME+'/'+file_name7

sql1="""copy dev.lnd.title_principals_l
from '{0}'
iam_role '{1}'
delimiter '\t' GZIP
IGNOREHEADER as 1;""".format(s3_file1,REDSHIFT_ROLE['dev'])

sql2="""copy dev.lnd.name_basics_l
from '{0}'
iam_role '{1}'
delimiter '\t' GZIP
IGNOREHEADER as 1;""".format(s3_file2,REDSHIFT_ROLE['dev'])

sql3="""copy dev.lnd.title_akas_l
from '{0}'
iam_role '{1}'
delimiter '\t' GZIP
IGNOREHEADER as 1;""".format(s3_file3,REDSHIFT_ROLE['dev'])

sql4="""copy dev.lnd.title_crew_l
from '{0}'
iam_role '{1}'
delimiter '\t' GZIP
IGNOREHEADER as 1;""".format(s3_file4,REDSHIFT_ROLE['dev'])

sql5="""copy dev.lnd.title_episode_l
from '{0}'
iam_role '{1}'
delimiter '\t' GZIP
IGNOREHEADER as 1;""".format(s3_file5,REDSHIFT_ROLE['dev'])

sql6="""copy dev.lnd.title_ratings_l
from '{0}'
iam_role '{1}'
delimiter '\t' GZIP
IGNOREHEADER as 1;""".format(s3_file6,REDSHIFT_ROLE['dev'])

sql7="""copy dev.lnd.title_basics_l
from '{0}'
iam_role '{1}'
delimiter '\t' GZIP
IGNOREHEADER as 1;""".format(s3_file7,REDSHIFT_ROLE['dev'])

cur.execute("truncate table dev.lnd.title_principals_l")
cur.execute("truncate table dev.lnd.title_akas_l")
cur.execute("truncate table dev.lnd.title_crew_l")
cur.execute("truncate table dev.lnd.title_episode_l")
cur.execute("truncate table dev.lnd.title_ratings_l")
cur.execute("truncate table dev.lnd.title_basics_l")
cur.execute(sql1)
cur.execute(sql3)
cur.execute(sql4)
cur.execute(sql5)
cur.execute(sql6)
cur.execute(sql7)

cur.execute("CALL dev.stg.LOAD_DATA();")
con.commit()
cur.close()
con.close()